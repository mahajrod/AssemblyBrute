#---- Main config file ----
"main_config_file": "config/core.yaml"      # Path to main config file relative to Snakefile
#--------------------------
#---- Resource profile ----
"resource_profile": "high"      # Should be present in resource directory
#--------------------------

"allowed_databases":
    "kraken2":
        "silva":
            "path":         "" # add path to silva database
            "memory_mb":    10000
            "threads":      15
            "time":         "06:00:00"
            "in_memory":    True
        "rdp":
            "path":         "" # add path to rdp database
            "memory_mb":    10000
            "threads":      15
            "time":         "06:00:00"
            "in_memory":    True
        "greengenes":
            "path":         "" # add path to greengenes database
            "memory_mb":    10000
            "threads":      15
            "time":         "06:00:00"
            "in_memory":    True
        "nt":
            "path":         "/projects/mjolnir1/people/xsg178/db/kraken/nt/05302024" # add path to nt database
            "memory_mb":    1024000
            "threads":      30
            "time":         "24:00:00"
            "in_memory":    True
    "fcs":
        "fcs_gx":
            "path":         "/projects/mjolnir1/people/xsg178/db/fcs/gxdb/" # add path to fcs_gx database
            "image_path":   "/projects/mjolnir1/people/xsg178/soft/FCS-GX/fcs-gx.sif"
            "memory_mb":    512000 # Entire database must be in memory, it requires at least 490 Gbp
            "threads":      30
            "time":         "06:00:00"
            "in_memory":    True
    "fcs_adaptor":
        "adaptor":
            "path":         null # database is embedded in singularity image
            "image_path":   "/projects/mjolnir1/people/xsg178/soft/fcsadaptor/fcs-adaptor.sif"
            "memory_mb":    20000 #
            "threads":      1
            "time":         "01:00:00"
            "in_memory":    True
            "taxonomy":     "eukaryota"
"final_fcs_db": "fcs_gx" # this database will be used for the filtration of the contigs if skip_fcs is False

"tool_containers":
    "rapid_telomere":       "/projects/mjolnir1/people/xsg178/soft/rapid-curation/rapid_hic_software/runTelo.sif"
    "deepvariant":
        "cpu": "/projects/mjolnir1/people/xsg178/soft/deepvariant/deepvariant_1.5.0.sif"
        "gpu": null # "/projects/mjolnir1/people/xsg178/soft/deepvariant/deepvariant_1.5.0-gpu.sif"

"stage_coretools":     #TODO: add bionano
    "filtering":
        "hifi": "cutadapt"
        "illumina": "cutadapt"
    "contig":
        "hifi":
            - "hifiasm" # Allowed: "hifiasm". TODO: "hicanu", "ipa", "flye", "nextdenovo"
        #"clr":
        #"nanopore":
    "purge_dups":
        "default":
            - "purge_dups"
    "hic_scaffolding":
        "default":
            #- "salsa2" # Allowed: "salsa2", "yahs", "3d-dna"
            - "yahs"
            #- "threeddna"
    "curation":
        "default":
            - "curation"
    "draft_qc":
        "default":
            - "assembly_qc"

"coretool_option_sets":
    "hifiasm":
         #- "l0primary"
         #- "l1primary"
         #- "l2primary"
         - "l3primary"
         #- "l0primary_no_hic"
         #- "l1primary_no_hic"
         #- "l2primary_no_hic"
         #- "l3primary_no_hic"
         #- "repeat_enhanced_l1"
         #- "repeat_enhanced_l2"
         #- "repeat_enhanced_l3"
         #- "repeat_super_enhanced_l3"
    "purge_dups":
        - "default"
        - "keep_hicov"
    "salsa2":
        - "phased_reads"
        - "unphased_reads"
    "yahs":
        - "phased_reads"
        #- "unphased_reads"
    "threeddna":
        - "phased_reads"
        #- "unphased_reads"
    "curation":
        - "default"
    "assembly_qc":
        - "default"
    "samba":
        - "phased_reads"
        #- "unphased_reads"

"other_tool_option_sets":
    "mitohifi":                 "default"   # Allowed: default
    "cutadapt":                 "default"   # Allowed: default
    "porechop_abi":             "default"   # Allowed: default
    "chopper":                  "default"   # Allowed: default
    "fastqc":                   "default"   # Allowed: default
    "mosdepth":                 "default"   # Allowed: default
    "jellyfish":                "default"   # Allowed: default
    "meryl":                    "default"   # Allowed: default
    "smudgeplot":               "default"   # Allowed: default
    "telo_finder":              "default"   # Allowed: default
    "quast":                    "default"   # Allowed: default
    "minimap2":                 "default"   # Allowed: default
    #"curation":                 "default"   # Allowed: default
    "two_read_bam_combiner":    "default"   # Allowed: default
    "pretextmap":               "default"   # Allowed: default
    "pretextsnapshot":          "default"   # Allowed: default
    "gcp":                      "default"   # Allowed: default
    "kat":                      "default"   # Allowed: default
    "juicer_tools_qc":          "default"   # Allowed: default
    "juicer_tools_pre":         "default"   # Allowed: default
    "mapping_pipeline":         "arima"  # Allowed: arima, bwa_only, juicer, pairtools
    "trf":                      "default"
    "wga":                      "default"
    "select_long_scaffolds":    "default"
    "deepvariant":              "default"   # Allowed: default
    "pairtools_parse":          "default"   # Allowed: default
    "samtools_stats":           "default"   # Allowed: default
    "trimmomatic":              "default"   # Allowed: default
    "tadbit":                   "default"   # Allowed: default
    "krater_from_histo":        "default"   # Allowed: default

"tool_manually_adjusted_features":
    "calcuts": # I recommend to check cutoffs created by calcuts after purge_dups step and adjust them according to distributions
        "lower_threshold": null
        "haploid_diploid_threshold": null
        "upper_threshold": null

"ploidy": 2
"bwa_tool": "bwa-mem2" # Allowed: bwa, bwa-mem2.
"genome_prefix": "GouSch1"
"busco_lineage_list":
    - "aves_odb10" #
#Often used BUSCO lineages: mammalia_odb10, vertebrata_odb10, laurasiatheria_odb10, carnivora_odb10,
#                           actinopterygii_odb10, saccharomycetes_odb10, sauropsida_odb10, aves_odb10

"kingdom": "animal" # required for MitoHiFi. Allowed: animal,plant,fungi
"mitochondrial_genetic_code": 2 #  NCBI genetic code (2 = vertebrate by default) to use for annotation of mtDNA
"species_name": "goura scheepmakeri"
"tax_id": 915434 # necessary for contamination scan via FCS

"database_set":
    "kraken2":
        - "nt"                      # configure corresonding entry in "allowed_databases"
    "fcs_adaptor":
        - "adaptor"
    "fcs":
        - "fcs_gx"

"filtered_data":
    - "hifi"
    - "illumina"
    - "nanopore"
    - "hic"
    - "ccs"

"final_kmer_counter": "meryl" # pipeline allows usage of different kmer counter tools, but only one genomesize assessment could be used
"final_kmer_length": 21 # pipeline allows usage of different kmer length, but only one genomesize assessment could be used

"final_kmer_datatype": "hifi"
"assembly_kmer_length":
    - 31 # kmer length to be used for phasing hic reads using assembled and purge_dupsed contigs
"phasing_stage": "purge_dups"

"contig_datatype": "hifi"
"hic_enzyme_set": "Arima"
"custom_enzyme_set": null # None

"starting_point": "fastq" # Allowed: "draft"
"data_types": "hifi,hic,reference" # Allowed: hifi, hic, lqccs, nanopore, reference  #TODO: add bionano and lr and others

"mode": "assembly"                # Allowed: "preprocessing", "qc", "assembly"
"preprocessing_mode": "default"   # Allowed: "default"
"qc_mode": "default"              # Allowed: "default"
"assembly_mode": "curation"           # Allowed: "default", "full", "purge_dups", "contig"; custom modes could be set in config file

"custom_preprocessing_stages": []
"custom_qc_stages": []
"custom_assembly_stages": []
"curation_seq_type":
    - "scaffolds"
    - "contigs" # works only if precuration stage is hic_scaffolding

"skip_read_qc": False
"skip_filter_reads": False
"skip_busco": False
"skip_gcp": False
"skip_fcs": False
"skip_fcs_adaptor": False
"skip_kraken": False
"skip_phasing": False
"skip_prescaf_pretext": False
"skip_postscaf_pretext": True
"skip_both_pretext": False
"skip_nanoqc": False
"skip_nanoplot": False
"skip_wga": False
"skip_higlass": True
"skip_variantcalling": True
"skip_hic_file": False
"skip_krater": False
"skip_kmer": False

"create_hic_file_during_curation": False
#------------ Options specific for cluster ------------
# This option have no effect if pipeline runs on local machine
"queue":
    "cpu": "cpuqueue"
    "gpu": "gpuqueue" # set to null if your cluster doesn't have gpuqueue. Gpuqueue is used only for deepvariant yet
"tool_queue":
    "deepvariant": "gpu"  # Allowed: "gpu", "cpu". GPU queue will be used if it is set here AND if "queue": "gpu" is set , and if GPU imae of deepvariant is available
"nodes":
    "blacklist": []
    "whitelist": []
"rule_nodes":
    "deepvariant":
        "blacklist":
            - "mjolnircomp05fl"
            - "mjolnircomp06fl"
        "whitelist": []
#------------------------------------------------------
#"adaptor_scan": True
#"fcs_gx_scan": True
# Allowed modes:
#       with starting_point "fastq":
#           "check_input"              : check of the input data and generation of the final config
#           "qc"                       : "check_input" + QC
#           "filtering"                : "qc" + filtering of the input data
#           "contig"                   : "filtering" + contig assembly
#           "purge_dups"               : "contig" + purging of haplotype duplicates
#           "hic_scaffolding"          : "purge_dups" + HiC-scaffolding
#           "full"                     : same as "hic_scaffolding"
#       with starting_point "draft":
#           "purge_dups"               : purging of haplotype duplicates from draft assembly
#           "hic_scaffolding"          : "purge_dups" + HiC-scaffolding


# TODO:  add modes:  "create_map_bionano", "bionano_scaffolding"

"parameter_set": "normal" # Choice of genome-size based set of parameters
"use_existing_envs": True # works only if --use-conda flag was set in snakemake command