#!/usr/bin/env python
__author__ = 'mahajrod'
import sys
import argparse
import pandas as pd


parser = argparse.ArgumentParser()

parser.add_argument("-g", "--gene_description_with_ogs", action="store", dest="gene_description_with_ogs", required=True,
                    help="Gene description file with ogs added. Required."
                         "File must be generated by add_ogs_to_gene_description.py")
parser.add_argument("-n", "--ncbi_tax_id", action="store", dest="ncbi_tax_id", required=True,
                    help="NCBI tax id. For example, 9606 for homo sapiens. Required.")
parser.add_argument("-e", "--species_gene_file", action="store", dest="species_gene_file", required=True,
                    help="Tab file with coordinates of genes. Required.")
parser.add_argument("-s", "--species_gene_file_sep", action="store", dest="species_gene_file_sep", default=",",
                    help="Separator used in file with coordinates of genes. Default: ','")
parser.add_argument("-c", "--chromosome_column", action="store", dest="chromosome_column", default="#Name",
                    help="Chromosome column in file with coordinates of genes. Default: '#Name'")
parser.add_argument("-p", "--ncbi_pep_id_column", action="store", dest="ncbi_pep_id_column", default="Protein product",
                    help="NCBI protein ID column in file with coordinates of genes. Default: 'Protein product'")
parser.add_argument("-o", "--output", action="store", dest="output", default=sys.stdout,
                    help="Output file tab file. ")

args = parser.parse_args()

busco_description_df = pd.read_csv(args.gene_description_with_ogs, sep="\t", names=["busco_gene_id", "OG", "busco_species_id",
                                                                             "ncbi_pep_id", "common_name",
                                                                             "description"],)

busco_description_df["ncbi_tax_id"] = busco_description_df["busco_species_id"].apply(lambda s: s.split("_")[0])
busco_description_df["ncbi_pep_id_no_version"] = busco_description_df["ncbi_pep_id"].apply(lambda s: ".".join(s.split(".")[:-1]))

genes_df = pd.read_csv(args.species_gene_file, sep=args.species_gene_file_sep, header=0)
genes_df["ncbi_pep_id_no_version"] = genes_df[args.ncbi_pep_id_column].apply(lambda s: ".".join(s.split(".")[:-1]))
genes_df["chrID"] = genes_df[args.chromosome_column].apply(lambda s: s.replace("chromosome ", "chr"))

busco_description_df_with_chromosomes = busco_description_df[busco_description_df["ncbi_tax_id"] == args.ncbi_tax_id].merge(genes_df[["chrID", "Start", "Stop", "Strand", "Locus", "ncbi_pep_id_no_version"]],
                                                                                                                            how="left",
                                                                                                                            left_on="ncbi_pep_id_no_version",
                                                                                                                            right_on="ncbi_pep_id_no_version")# .to_csv(args.output, sep="\t", index=True, header=False)
busco_description_df_with_chromosomes["Start"] = busco_description_df_with_chromosomes["Start"].astype('Int64')
busco_description_df_with_chromosomes["Stop"] = busco_description_df_with_chromosomes["Stop"].astype('Int64')

busco_description_df_with_chromosomes.to_csv(args.output, sep="\t", header=True, index=False)
